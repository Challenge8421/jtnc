#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.ietf.nea.pt.socket.simple.DefaultNegotiationResponder
	c114 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultNegotiationResponder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultNegotiationResponder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultNegotiationResponder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - TYPE : NegotiatorTypeEnum </td></tr>
<tr><td align="left" balign="left"> - minVersion : short </td></tr>
<tr><td align="left" balign="left"> - maxVersion : short </td></tr>
<tr><td align="left" balign="left"> - prefVersion : short </td></tr>
<tr><td align="left" balign="left"> - negotiatedVersion : short </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultNegotiationResponder(minVersion : short, maxVersion : short, prefVersion : short) </td></tr>
<tr><td align="left" balign="left"> + getType() : NegotiatorTypeEnum </td></tr>
<tr><td align="left" balign="left"> + getNegotiatedVersion() : short </td></tr>
<tr><td align="left" balign="left"> + negotiate(wrappedSocket : SocketMessenger) </td></tr>
<tr><td align="left" balign="left"> - chooseVersion(message : TransportMessage) </td></tr>
<tr><td align="left" balign="left"> - handleErrorMessage(message : TransportMessage) </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultNegotiationResponder.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.ietf.nea.pt.socket.simple.DefaultSocketTransportConnectionBuilder
	c115 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultSocketTransportConnectionBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultSocketTransportConnectionBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultSocketTransportConnectionBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT_IM_COUNT : int </td></tr>
<tr><td align="left" balign="left"> - tProtocol : TcgProtocolBindingIdentifier </td></tr>
<tr><td align="left" balign="left"> - writer : TransportWriter&lt;TransportMessage&gt; </td></tr>
<tr><td align="left" balign="left"> - reader : TransportReader&lt;TransportMessage&gt; </td></tr>
<tr><td align="left" balign="left"> - memoryBoarder : long </td></tr>
<tr><td align="left" balign="left"> - server : boolean </td></tr>
<tr><td align="left" balign="left"> - messageLength : long </td></tr>
<tr><td align="left" balign="left"> - imMessageLength : long </td></tr>
<tr><td align="left" balign="left"> - maxRoundTrips : long </td></tr>
<tr><td align="left" balign="left"> - authenticator : Authenticator </td></tr>
<tr><td align="left" balign="left"> - negotiator : Negotiator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultSocketTransportConnectionBuilder(server : boolean, tProtocol : TcgProtocolBindingIdentifier, writer : TransportWriter&lt;TransportMessage&gt;, reader : TransportReader&lt;TransportMessage&gt;) </td></tr>
<tr><td align="left" balign="left"> + isServerConnectionBuilder() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTransportProtocolIdentifier() : TcgProtocolBindingIdentifier </td></tr>
<tr><td align="left" balign="left"> + getWriter() : TransportWriter&lt;TransportMessage&gt; </td></tr>
<tr><td align="left" balign="left"> + getReader() : TransportReader&lt;TransportMessage&gt; </td></tr>
<tr><td align="left" balign="left"> + getMessageLength() : long </td></tr>
<tr><td align="left" balign="left"> + getImMessageLength() : long </td></tr>
<tr><td align="left" balign="left"> + getMaxRoundTrips() : long </td></tr>
<tr><td align="left" balign="left"> + setMessageLength(maxMessageLength : long) : DefaultSocketTransportConnectionBuilder </td></tr>
<tr><td align="left" balign="left"> + setImMessageLength(maxImMessageLength : long) : DefaultSocketTransportConnectionBuilder </td></tr>
<tr><td align="left" balign="left"> + setMaxRoundTrips(maxRounds : long) : DefaultSocketTransportConnectionBuilder </td></tr>
<tr><td align="left" balign="left"> + addNegotiator(neg : Negotiator) : DefaultSocketTransportConnectionBuilder </td></tr>
<tr><td align="left" balign="left"> + addAuthenticator(auth : Authenticator) : DefaultSocketTransportConnectionBuilder </td></tr>
<tr><td align="left" balign="left"> + toConnection(id : String, selfInitiated : boolean, underlying : Socket) : TransportConnection </td></tr>
<tr><td align="left" balign="left"> + toConnection(selfInitiated : boolean, underlying : Socket) : TransportConnection </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultSocketTransportConnectionBuilder.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.ietf.nea.pt.socket.simple.DefaultAuthenticationServer
	c116 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultAuthenticationServer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultAuthenticationServer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultAuthenticationServer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOGGER : Logger </td></tr>
<tr><td align="left" balign="left"> - TYPE : AuthenticatorTypeEnum </td></tr>
<tr><td align="left" balign="left"> - mechanisms : SaslServerMechansims </td></tr>
<tr><td align="left" balign="left"> - result : PtTlsSaslResultEnum </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultAuthenticationServer() </td></tr>
<tr><td align="left" balign="left"> + DefaultAuthenticationServer(mechanisms : SaslServerMechansims) </td></tr>
<tr><td align="left" balign="left"> + getType() : AuthenticatorTypeEnum </td></tr>
<tr><td align="left" balign="left"> + authenticate(connection : SocketMessenger) </td></tr>
<tr><td align="left" balign="left"> + getAuthenticationResult() : PtTlsSaslResultEnum </td></tr>
<tr><td align="left" balign="left"> - negotiateMechanisms(stage : byte, wrappedSocket : SocketMessenger) : PtTlsMessageValueSaslMechanismSelection </td></tr>
<tr><td align="left" balign="left"> - executeAuthentication(saslServer : SaslServer, initialMessage : byte[], wrappedSocket : SocketMessenger) </td></tr>
<tr><td align="left" balign="left"> - handleErrorMessage(message : TransportMessage) </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultAuthenticationServer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.ietf.nea.pt.socket.simple.DefaultAuthenticationClient
	c117 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultAuthenticationClient" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultAuthenticationClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultAuthenticationClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOGGER : Logger </td></tr>
<tr><td align="left" balign="left"> - TYPE : AuthenticatorTypeEnum </td></tr>
<tr><td align="left" balign="left"> - mechanisms : SaslClientMechansims </td></tr>
<tr><td align="left" balign="left"> - result : PtTlsSaslResultEnum </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultAuthenticationClient() </td></tr>
<tr><td align="left" balign="left"> + DefaultAuthenticationClient(mechanisms : SaslClientMechansims) </td></tr>
<tr><td align="left" balign="left"> + getType() : AuthenticatorTypeEnum </td></tr>
<tr><td align="left" balign="left"> + authenticate(connection : SocketMessenger) </td></tr>
<tr><td align="left" balign="left"> + getAuthenticationResult() : PtTlsSaslResultEnum </td></tr>
<tr><td align="left" balign="left"> - negotiateMechanisms(wrappedSocket : SocketMessenger) : List&lt;SaslMechanismEntry&gt; </td></tr>
<tr><td align="left" balign="left"> - executeAuthentication(saslClient : SaslClient, wrappedSocket : SocketMessenger) : PtTlsSaslResultEnum </td></tr>
<tr><td align="left" balign="left"> - handleErrorMessage(message : TransportMessage) </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultAuthenticationClient.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.ietf.nea.pt.socket.simple.DefaultNegotiationInitiator
	c118 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultNegotiationInitiator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultNegotiationInitiator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultNegotiationInitiator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - TYPE : NegotiatorTypeEnum </td></tr>
<tr><td align="left" balign="left"> - minVersion : short </td></tr>
<tr><td align="left" balign="left"> - maxVersion : short </td></tr>
<tr><td align="left" balign="left"> - prefVersion : short </td></tr>
<tr><td align="left" balign="left"> - negotiatedVersion : short </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultNegotiationInitiator(minVersion : short, maxVersion : short, prefVersion : short) </td></tr>
<tr><td align="left" balign="left"> + getType() : NegotiatorTypeEnum </td></tr>
<tr><td align="left" balign="left"> + getNegotiatedVersion() : short </td></tr>
<tr><td align="left" balign="left"> + negotiate(wrappedSocket : SocketMessenger) </td></tr>
<tr><td align="left" balign="left"> - handleVersionResponseMessage(message : TransportMessage) </td></tr>
<tr><td align="left" balign="left"> - handleErrorMessage(message : TransportMessage) </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultNegotiationInitiator.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.ietf.nea.pt.socket.simple.DefaultSocketTransportConnection
	c119 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultSocketTransportConnection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultSocketTransportConnection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultSocketTransportConnection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOGGER : Logger </td></tr>
<tr><td align="left" balign="left"> - selfInitiated : boolean </td></tr>
<tr><td align="left" balign="left"> - attributes : TransportAttributes </td></tr>
<tr><td align="left" balign="left"> - socketWrapper : SocketWrapper </td></tr>
<tr><td align="left" balign="left"> - runner : ExecutorService </td></tr>
<tr><td align="left" balign="left"> - authenticator : Authenticator </td></tr>
<tr><td align="left" balign="left"> - negotiator : Negotiator </td></tr>
<tr><td align="left" balign="left"> - transporter : Receiver </td></tr>
<tr><td align="left" balign="left"> - phase : TransportConnectionPhase </td></tr>
<tr><td align="left" balign="left"> - listener : TransportListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultSocketTransportConnection(selfInitiated : boolean, attributes : TransportAttributes, socketWrapper : SocketWrapper, negotiator : Negotiator, authenticator : Authenticator, receiver : Receiver, runner : ExecutorService) </td></tr>
<tr><td align="left" balign="left"> + isSelfInititated() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOpen() : boolean </td></tr>
<tr><td align="left" balign="left"> + bootstrap() </td></tr>
<tr><td align="left" balign="left"> + activate(tnccsMessageListener : TransportListener) </td></tr>
<tr><td align="left" balign="left"> + send(buf : ByteBuffer) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Attributed </td></tr>
<tr><td align="left" balign="left"> - checkRoundTrips() </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultSocketTransportConnection.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.ietf.nea.pt.socket.simple.DefaultSocketTransportConnection.Receive
	c120 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultSocketTransportConnection.Receive" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultSocketTransportConnection.Receive.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Receive </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DefaultSocketTransportConnection.Receive() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultSocketTransportConnection.Receive.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.ietf.nea.pt.socket.simple.DefaultSocketWrapper
	c121 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultSocketWrapper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultSocketWrapper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultSocketWrapper </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOGGER : Logger </td></tr>
<tr><td align="left" balign="left"> - socket : Socket </td></tr>
<tr><td align="left" balign="left"> - writer : TransportWriter&lt;TransportMessage&gt; </td></tr>
<tr><td align="left" balign="left"> - reader : TransportReader&lt;TransportMessage&gt; </td></tr>
<tr><td align="left" balign="left"> - maxMessageLength : long </td></tr>
<tr><td align="left" balign="left"> - out : OutputStream </td></tr>
<tr><td align="left" balign="left"> - in : InputStream </td></tr>
<tr><td align="left" balign="left"> - messageIdentifier : long </td></tr>
<tr><td align="left" balign="left"> - rxCounter : long </td></tr>
<tr><td align="left" balign="left"> - txCounter : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultSocketWrapper(maxMessageLength : long, socket : Socket, writer : TransportWriter&lt;TransportMessage&gt;, reader : TransportReader&lt;TransportMessage&gt;) </td></tr>
<tr><td align="left" balign="left"> + isOpen() : boolean </td></tr>
<tr><td align="left" balign="left"> + initialize() </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + getIdentifier() : long </td></tr>
<tr><td align="left" balign="left"> + getRxCounter() : long </td></tr>
<tr><td align="left" balign="left"> + getTxCounter() : long </td></tr>
<tr><td align="left" balign="left"> + resetCounters() </td></tr>
<tr><td align="left" balign="left"> + writeToStream(message : TransportMessage) </td></tr>
<tr><td align="left" balign="left"> + readFromStream() : TransportMessage </td></tr>
<tr><td align="left" balign="left"> - checkMessageLength(length : long) </td></tr>
<tr><td align="left" balign="left"> + createValidationErrorMessage(exception : ValidationException) : TransportMessage </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultSocketWrapper.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.ietf.nea.pt.socket.simple.DefaultBatchReceiver
	c122 [label=<<table title="org.ietf.nea.pt.socket.simple.DefaultBatchReceiver" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DefaultBatchReceiver.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultBatchReceiver </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOGGER : Logger </td></tr>
<tr><td align="left" balign="left"> - batch : PtTlsMessageValuePbBatch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultBatchReceiver() </td></tr>
<tr><td align="left" balign="left"> + getTnccsData() : ByteBuffer </td></tr>
<tr><td align="left" balign="left"> + receive(wrappedSocket : SocketMessenger) </td></tr>
<tr><td align="left" balign="left"> - handleErrorMessage(message : TransportMessage) </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultBatchReceiver.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

