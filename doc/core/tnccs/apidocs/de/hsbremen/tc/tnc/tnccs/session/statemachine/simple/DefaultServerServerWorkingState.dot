#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// de.hsbremen.tc.tnc.tnccs.session.statemachine.AbstractState
	c14928 [label=<<table title="de.hsbremen.tc.tnc.tnccs.session.statemachine.AbstractState" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../AbstractState.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractState </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - successor : State </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractState() </td></tr>
<tr><td align="left" balign="left"> + getProcessorState(result : TnccsBatch) : State </td></tr>
<tr><td align="left" balign="left"> + collect() : TnccsBatch </td></tr>
<tr><td align="left" balign="left"> + handle(batchContainer : TnccsBatchContainer) : TnccsBatch </td></tr>
<tr><td align="left" balign="left"> + getConclusiveState() : State </td></tr>
<tr><td align="left" balign="left"> # getSuccessor() : State </td></tr>
<tr><td align="left" balign="left"> # setSuccessor(successor : State) </td></tr>
		</table></td></tr>
		</table>>, URL="../AbstractState.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.hsbremen.tc.tnc.tnccs.session.statemachine.ClientWorking
	c14931 [label=<<table title="de.hsbremen.tc.tnc.tnccs.session.statemachine.ClientWorking" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../ClientWorking.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ClientWorking </td></tr>
		</table></td></tr>
		</table>>, URL="../ClientWorking.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.hsbremen.tc.tnc.tnccs.session.statemachine.simple.DefaultServerServerWorkingState
	c14936 [label=<<table title="de.hsbremen.tc.tnc.tnccs.session.statemachine.simple.DefaultServerServerWorkingState" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./DefaultServerServerWorkingState.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultServerServerWorkingState </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOGGER : Logger </td></tr>
<tr><td align="left" balign="left"> - helper : StateHelper&lt;TncsContentHandler&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ DefaultServerServerWorkingState(helper : StateHelper&lt;TncsContentHandler&gt;) </td></tr>
<tr><td align="left" balign="left"> + collect() : TnccsBatch </td></tr>
<tr><td align="left" balign="left"> + handle(batchContainer : TnccsBatchContainer) : TnccsBatch </td></tr>
<tr><td align="left" balign="left"> - checkRoundTrips() : boolean </td></tr>
<tr><td align="left" balign="left"> - createResult() : TnccsBatch </td></tr>
<tr><td align="left" balign="left"> + getConclusiveState() : State </td></tr>
<tr><td align="left" balign="left"> - handleClientData(batchContainer : TnccsBatchContainer) : TnccsBatch </td></tr>
<tr><td align="left" balign="left"> - createClientBatch(messages : List&lt;TnccsMessage&gt;) : TnccsBatch </td></tr>
		</table></td></tr>
		</table>>, URL="./DefaultServerServerWorkingState.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//de.hsbremen.tc.tnc.tnccs.session.statemachine.simple.DefaultServerServerWorkingState extends de.hsbremen.tc.tnc.tnccs.session.statemachine.AbstractState
	c14928:p -> c14936:p [dir=back,arrowtail=empty];
	//de.hsbremen.tc.tnc.tnccs.session.statemachine.simple.DefaultServerServerWorkingState implements de.hsbremen.tc.tnc.tnccs.session.statemachine.ClientWorking
	c14931:p -> c14936:p [dir=back,arrowtail=empty,style=dashed];
}

