#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// de.hsbremen.tc.tnc.message.util.ByteBuffer
	c161240 [label=<<table title="de.hsbremen.tc.tnc.message.util.ByteBuffer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ByteBuffer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ByteBuffer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + write(buffer : ByteBuffer) </td></tr>
<tr><td align="left" balign="left"> + write(array : byte[]) </td></tr>
<tr><td align="left" balign="left"> + writeByte(signed : byte) </td></tr>
<tr><td align="left" balign="left"> + writeUnsignedByte(unsigned : short) </td></tr>
<tr><td align="left" balign="left"> + writeShort(signed : short) </td></tr>
<tr><td align="left" balign="left"> + writeUnsignedShort(unsigned : int) </td></tr>
<tr><td align="left" balign="left"> + writeInt(signed : int) </td></tr>
<tr><td align="left" balign="left"> + writeUnsignedInt(unsigned : long) </td></tr>
<tr><td align="left" balign="left"> + writeLong(signed : long) </td></tr>
<tr><td align="left" balign="left"> + writeDigits(number : long, length : byte) </td></tr>
<tr><td align="left" balign="left"> + read(length : long) : ByteBuffer </td></tr>
<tr><td align="left" balign="left"> + read(length : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> + readByte() : byte </td></tr>
<tr><td align="left" balign="left"> + readShort() : short </td></tr>
<tr><td align="left" balign="left"> + readShort(length : byte) : short </td></tr>
<tr><td align="left" balign="left"> + readInt() : int </td></tr>
<tr><td align="left" balign="left"> + readInt(length : byte) : int </td></tr>
<tr><td align="left" balign="left"> + readLong() : long </td></tr>
<tr><td align="left" balign="left"> + readLong(length : byte) : long </td></tr>
<tr><td align="left" balign="left"> + revertWrite(length : long) : long </td></tr>
<tr><td align="left" balign="left"> + revertRead(length : long) : long </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + bytesWritten() : long </td></tr>
<tr><td align="left" balign="left"> + bytesRead() : long </td></tr>
<tr><td align="left" balign="left"> + isReadable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWriteable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isRevertable() : boolean </td></tr>
<tr><td align="left" balign="left"> + capacity() : long </td></tr>
		</table></td></tr>
		</table>>, URL="./ByteBuffer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.hsbremen.tc.tnc.message.util.StreamedReadOnlyByteBuffer
	c161242 [label=<<table title="de.hsbremen.tc.tnc.message.util.StreamedReadOnlyByteBuffer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./StreamedReadOnlyByteBuffer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StreamedReadOnlyByteBuffer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT_STREAM_CHUNK : int </td></tr>
<tr><td align="left" balign="left"> - readPointer : long </td></tr>
<tr><td align="left" balign="left"> - stream : InputStream </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StreamedReadOnlyByteBuffer(in : InputStream) </td></tr>
<tr><td align="left" balign="left"> + write(buffer : ByteBuffer) </td></tr>
<tr><td align="left" balign="left"> + write(array : byte[]) </td></tr>
<tr><td align="left" balign="left"> + writeByte(b : byte) </td></tr>
<tr><td align="left" balign="left"> + writeUnsignedByte(unsigned : short) </td></tr>
<tr><td align="left" balign="left"> + writeShort(signed : short) </td></tr>
<tr><td align="left" balign="left"> + writeUnsignedShort(unsigned : int) </td></tr>
<tr><td align="left" balign="left"> + writeInt(signed : int) </td></tr>
<tr><td align="left" balign="left"> + writeUnsignedInt(unsigned : long) </td></tr>
<tr><td align="left" balign="left"> + writeLong(signed : long) </td></tr>
<tr><td align="left" balign="left"> + writeDigits(number : long, length : byte) </td></tr>
<tr><td align="left" balign="left"> + read(length : long) : ByteBuffer </td></tr>
<tr><td align="left" balign="left"> + read(length : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> + readByte() : byte </td></tr>
<tr><td align="left" balign="left"> + readShort() : short </td></tr>
<tr><td align="left" balign="left"> + readShort(length : byte) : short </td></tr>
<tr><td align="left" balign="left"> + readInt() : int </td></tr>
<tr><td align="left" balign="left"> + readInt(length : byte) : int </td></tr>
<tr><td align="left" balign="left"> + readLong() : long </td></tr>
<tr><td align="left" balign="left"> + readLong(length : byte) : long </td></tr>
<tr><td align="left" balign="left"> + revertWrite(length : long) : long </td></tr>
<tr><td align="left" balign="left"> + revertRead(length : long) : long </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + bytesWritten() : long </td></tr>
<tr><td align="left" balign="left"> + bytesRead() : long </td></tr>
<tr><td align="left" balign="left"> + capacity() : long </td></tr>
<tr><td align="left" balign="left"> + isReadable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWriteable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isRevertable() : boolean </td></tr>
<tr><td align="left" balign="left"> - incrementReadPointer(bytesRead : long) </td></tr>
		</table></td></tr>
		</table>>, URL="./StreamedReadOnlyByteBuffer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//de.hsbremen.tc.tnc.message.util.StreamedReadOnlyByteBuffer implements de.hsbremen.tc.tnc.message.util.ByteBuffer
	c161240:p -> c161242:p [dir=back,arrowtail=empty,style=dashed];
}

